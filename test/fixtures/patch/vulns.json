{
  "ok": false,
  "vulnerabilities": [
    {
      "title": "semver Regular Expression Denial of Service",
      "credit": [
        "Adam Baldwin"
      ],
      "description": "## Overview\nThe semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack. This is a slightly differnt variant of a typical Regular Expression Denial of Service ([ReDoS](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS)) vulnerability.\n\n## Remediation\nUpdate to a version 4.3.2 or greater. From the issue description [2]: \"Package version can no longer be more than 256 characters long. This prevents a situation in which parsing the version number can use exponentially more time and memory to parse, leading to a potential denial of service.\"\n\n## References\n- https://nodesecurity.io/advisories/31\n- [1] https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n- [2] https://github.com/npm/npm/releases/tag/v2.7.5\n",
      "semver": {
        "vulnerable": "<4.3.2",
        "unaffected": ">=4.3.2"
      },
      "CVSSv3": "",
      "severity": "medium",
      "identifiers": {
        "CWE": [
          "CWE-400"
        ],
        "CVE": [],
        "NSP": 31
      },
      "patches": [
        {
          "urls": [
            "https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"
          ],
          "version": "<4.3.2 >= 2.0.2",
          "modificationTime": "2015-04-03T16:00:00.000Z",
          "comments": [
            "https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"
          ],
          "id": "patch:npm:semver:20150403:0"
        }
      ],
      "moduleName": "semver",
      "creationTime": "2015-04-03T16:00:00.000Z",
      "publicationTime": "2015-04-03T16:00:00.000Z",
      "modificationTime": "2015-11-06T02:09:36.180Z",
      "id": "npm:semver:20150403",
      "from": [
        "foo@1.0.0",
        "@remy/protect-test@1.0.7",
        "semver@2.3.2"
      ],
      "upgradePath": [
        false,
        false,
        "semver@4.3.2"
      ],
      "version": "2.3.2",
      "name": "semver",
      "__filename": "/Users/remy/Sites/snyk-tests/foo/node_modules/@remy/protect-test/node_modules/semver/package.json"
    },
    {
      "title": "Improper minification of non-boolean comparisons",
      "credit": [
        "Tom MacWright"
      ],
      "description": "## Overview\n[Tom MacWright](https://github.com/mishoo/UglifyJS2/issues/751) discovered that UglifyJS versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted Javascript file to have altered functionality after minification. This bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [Yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\n\n_Source: [Node Security Project](https://nodesecurity.io/advisories/39)_\n\n\n### Details\n\nIn Boolean algebra, DeMorgan's laws describe the relationships between conjunctions ( && ), disjunctions ( || ) and negations ( ! ).\nIn Javascript form, they state that:\n !(a && b) === (!a) || (!b)\n !(a || b) === (!a) && (!b)\n\nThe law does not hold true when one of the values is not a boolean however.\n\nVulnerable versions of UglifyJS do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\n\nConsider this authentication function:\n\n```\nfunction isTokenValid(user) {\n    var timeLeft =\n        !!config && // config object exists\n        !!user.token && // user object has a token\n        !user.token.invalidated && // token is not explicitly invalidated\n        !config.uninitialized && // config is initialized\n        !config.ignoreTimestamps && // don't ignore timestamps\n        getTimeLeft(user.token.expiry); // > 0 if expiration is in the future\n\n    // The token must not be expired\n    return timeLeft > 0;\n}\n\nfunction getTimeLeft(expiry) {\n  return expiry - getSystemTime();\n}\n```\nWhen minified with a vulnerable version of UglifyJS, it will produce the following insecure output, where a token will never expire:\n\n( Formatted for readability )\n\n```\nfunction isTokenValid(user) {\n    var timeLeft = !(                       // negation\n        !config                             // config object does not exist\n        || !user.token                      // user object does not have a token\n        || user.token.invalidated           // token is explicitly invalidated\n        || config.uninitialized             // config isn't initialized\n        || config.ignoreTimestamps          // ignore timestamps\n        || !getTimeLeft(user.token.expiry)  // > 0 if expiration is in the future\n    );\n    return timeLeft > 0\n}\n\nfunction getTimeLeft(expiry) {\n    return expiry - getSystemTime()\n}\n```\n\n## Remediation\n\nUpgrade UglifyJS to version >= 2.4.24.\n\n## References\n- https://nodesecurity.io/advisories/39\n- https://github.com/tmcw/mdast-uglify-bug\n- https://zyan.scripts.mit.edu/blog/backdooring-js/\n- https://github.com/mishoo/UglifyJS2/issues/751\n",
      "semver": {
        "vulnerable": "<= 2.4.23",
        "unaffected": ">= 2.4.24"
      },
      "CVSSv3": "",
      "severity": "medium",
      "identifiers": {
        "CWE": [
          "CWE-95"
        ],
        "CVE": [],
        "NSP": 39
      },
      "patches": [
        {
          "urls": [
            "https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/uglify-js/20150824/uglify-js_20150824_0_0_905b6011784ca60d41919ac1a499962b7c1d4b02_snyk.patch"
          ],
          "version": "<= 2.4.23 >2.0.0",
          "modificationTime": "2015-08-24T09:29:10.000Z",
          "comments": [],
          "id": "patch:npm:uglify-js:20150824:0"
        }
      ],
      "moduleName": "uglify-js",
      "creationTime": "2015-08-24T09:29:10.000Z",
      "publicationTime": "2015-08-24T09:29:10.000Z",
      "modificationTime": "2015-11-06T02:09:36.180Z",
      "id": "npm:uglify-js:20150824",
      "from": [
        "foo@1.0.0",
        "jade@1.11.0",
        "transformers@2.1.0",
        "uglify-js@2.2.5"
      ],
      "upgradePath": [
        false,
        false,
        "transformers@3.1.0",
        "uglify-js@2.4.24"
      ],
      "version": "2.2.5",
      "name": "uglify-js",
      "__filename": "/Users/remy/Sites/snyk-tests/foo/node_modules/jade/node_modules/transformers/node_modules/uglify-js/package.json"
    },
    {
      "title": "Regular Expression Denial of Service",
      "credit": [
        "Adam Baldwin"
      ],
      "creationTime": "2015-11-06T02:09:36.186Z",
      "modificationTime": "2015-11-06T02:09:36.186Z",
      "publicationTime": "2015-10-24T21:01:32.155Z",
      "description": "## Overview\nThe `parse()` function in the [`uglify-js`](https://www.npmjs.com/package/uglify-js) package prior to version 2.6.0 is vulnerable to regular expression denial of service (ReDoS) attacks when long inputs of certain patters are processed.\n\n## Details\n\"The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS)\n\n## Remediation\nUpgrade to version 2.6.0 or greater. \n\n## References\n- https://nodesecurity.io/advisories/48\n- https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n",
      "semver": {
        "vulnerable": "<2.6.0",
        "unaffected": ">=2.6.0"
      },
      "CVSSv3": "",
      "severity": "low",
      "identifiers": {
        "CWE": [
          "CWE-400"
        ],
        "CVE": [],
        "NSP": 48
      },
      "patches": [
        {
          "urls": [
            "https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk_inc.patch"
          ],
          "version": "<= 2.4.23 >=2.2.0",
          "modificationTime": "2015-11-16T09:29:10.000Z",
          "comments": [
            "https://github.com/mishoo/UglifyJS2/commit/63d35f8.patch"
          ],
          "id": "patch:npm:uglify-js:20151024:0"
        },
        {
          "urls": [
            "https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk.patch"
          ],
          "version": "<2.6.0 >2.4.23",
          "modificationTime": "2015-11-16T09:29:10.000Z",
          "comments": [
            "https://github.com/mishoo/UglifyJS2/commit/63d35f8.patch"
          ],
          "id": "patch:npm:uglify-js:20151024:1"
        }
      ],
      "moduleName": "uglify-js",
      "id": "npm:uglify-js:20151024",
      "from": [
        "foo@1.0.0",
        "jade@1.11.0",
        "transformers@2.1.0",
        "uglify-js@2.2.5"
      ],
      "upgradePath": [
        false,
        false,
        false,
        "uglify-js@2.6.0"
      ],
      "version": "2.2.5",
      "name": "uglify-js",
      "__filename": "/Users/remy/Sites/snyk-tests/foo/node_modules/jade/node_modules/transformers/node_modules/uglify-js/package.json"
    }
  ],
  "dependencyCount": 211
}